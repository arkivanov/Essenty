public final class com/arkivanov/essenty/statekeeper/AndroidExtKt {
	public static final fun StateKeeper (Landroidx/savedstate/SavedStateRegistry;Lkotlin/jvm/functions/Function0;)Lcom/arkivanov/essenty/statekeeper/StateKeeper;
	public static synthetic fun StateKeeper$default (Landroidx/savedstate/SavedStateRegistry;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lcom/arkivanov/essenty/statekeeper/StateKeeper;
	public static final fun stateKeeper (Landroidx/savedstate/SavedStateRegistryOwner;Lkotlin/jvm/functions/Function0;)Lcom/arkivanov/essenty/statekeeper/StateKeeper;
	public static synthetic fun stateKeeper$default (Landroidx/savedstate/SavedStateRegistryOwner;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lcom/arkivanov/essenty/statekeeper/StateKeeper;
}

public final class com/arkivanov/essenty/statekeeper/DefaultStateKeeperDispatcher$SavedState$Creator : android/os/Parcelable$Creator {
	public fun <init> ()V
	public final fun createFromParcel (Landroid/os/Parcel;)Lcom/arkivanov/essenty/statekeeper/DefaultStateKeeperDispatcher$SavedState;
	public synthetic fun createFromParcel (Landroid/os/Parcel;)Ljava/lang/Object;
	public final fun newArray (I)[Lcom/arkivanov/essenty/statekeeper/DefaultStateKeeperDispatcher$SavedState;
	public synthetic fun newArray (I)[Ljava/lang/Object;
}

public abstract interface class com/arkivanov/essenty/statekeeper/StateKeeper {
	public abstract fun consume (Ljava/lang/String;Lkotlin/reflect/KClass;)Landroid/os/Parcelable;
	public abstract fun consume (Ljava/lang/String;Lkotlinx/serialization/DeserializationStrategy;)Ljava/lang/Object;
	public abstract fun isRegistered (Ljava/lang/String;)Z
	public abstract fun register (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public abstract fun register (Ljava/lang/String;Lkotlinx/serialization/SerializationStrategy;Lkotlin/jvm/functions/Function0;)V
	public abstract fun unregister (Ljava/lang/String;)V
}

public final class com/arkivanov/essenty/statekeeper/StateKeeper$DefaultImpls {
	public static fun consume (Lcom/arkivanov/essenty/statekeeper/StateKeeper;Ljava/lang/String;Lkotlinx/serialization/DeserializationStrategy;)Ljava/lang/Object;
	public static fun register (Lcom/arkivanov/essenty/statekeeper/StateKeeper;Ljava/lang/String;Lkotlinx/serialization/SerializationStrategy;Lkotlin/jvm/functions/Function0;)V
}

public final class com/arkivanov/essenty/statekeeper/StateKeeper$ParcelableData$Creator : android/os/Parcelable$Creator {
	public fun <init> ()V
	public final fun createFromParcel (Landroid/os/Parcel;)Lcom/arkivanov/essenty/statekeeper/StateKeeper$ParcelableData;
	public synthetic fun createFromParcel (Landroid/os/Parcel;)Ljava/lang/Object;
	public final fun newArray (I)[Lcom/arkivanov/essenty/statekeeper/StateKeeper$ParcelableData;
	public synthetic fun newArray (I)[Ljava/lang/Object;
}

public abstract interface class com/arkivanov/essenty/statekeeper/StateKeeperDispatcher : com/arkivanov/essenty/statekeeper/StateKeeper {
	public abstract fun save ()Lcom/arkivanov/essenty/parcelable/ParcelableContainer;
}

public final class com/arkivanov/essenty/statekeeper/StateKeeperDispatcher$DefaultImpls {
	public static fun consume (Lcom/arkivanov/essenty/statekeeper/StateKeeperDispatcher;Ljava/lang/String;Lkotlinx/serialization/DeserializationStrategy;)Ljava/lang/Object;
	public static fun register (Lcom/arkivanov/essenty/statekeeper/StateKeeperDispatcher;Ljava/lang/String;Lkotlinx/serialization/SerializationStrategy;Lkotlin/jvm/functions/Function0;)V
}

public final class com/arkivanov/essenty/statekeeper/StateKeeperDispatcherKt {
	public static final fun StateKeeperDispatcher (Lcom/arkivanov/essenty/parcelable/ParcelableContainer;)Lcom/arkivanov/essenty/statekeeper/StateKeeperDispatcher;
	public static synthetic fun StateKeeperDispatcher$default (Lcom/arkivanov/essenty/parcelable/ParcelableContainer;ILjava/lang/Object;)Lcom/arkivanov/essenty/statekeeper/StateKeeperDispatcher;
}

public abstract interface class com/arkivanov/essenty/statekeeper/StateKeeperOwner {
	public abstract fun getStateKeeper ()Lcom/arkivanov/essenty/statekeeper/StateKeeper;
}

