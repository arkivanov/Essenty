// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.arkivanov.essenty:lifecycle-coroutines>
final fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle.coroutines/coroutineScope(kotlin.coroutines/CoroutineContext = ...): kotlinx.coroutines/CoroutineScope // com.arkivanov.essenty.lifecycle.coroutines/coroutineScope|coroutineScope@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.coroutines.CoroutineContext){}[0]
final fun (kotlinx.coroutines/CoroutineScope).com.arkivanov.essenty.lifecycle.coroutines/withLifecycle(com.arkivanov.essenty.lifecycle/Lifecycle): kotlinx.coroutines/CoroutineScope // com.arkivanov.essenty.lifecycle.coroutines/withLifecycle|withLifecycle@kotlinx.coroutines.CoroutineScope(com.arkivanov.essenty.lifecycle.Lifecycle){}[0]
final fun <#A: kotlin/Any?> (kotlinx.coroutines.flow/Flow<#A>).com.arkivanov.essenty.lifecycle.coroutines/flowWithLifecycle(com.arkivanov.essenty.lifecycle/Lifecycle, com.arkivanov.essenty.lifecycle/Lifecycle.State = ..., kotlin.coroutines/CoroutineContext = ...): kotlinx.coroutines.flow/Flow<#A> // com.arkivanov.essenty.lifecycle.coroutines/flowWithLifecycle|flowWithLifecycle@kotlinx.coroutines.flow.Flow<0:0>(com.arkivanov.essenty.lifecycle.Lifecycle;com.arkivanov.essenty.lifecycle.Lifecycle.State;kotlin.coroutines.CoroutineContext){0ยง<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (kotlinx.coroutines.flow/Flow<#A>).com.arkivanov.essenty.lifecycle.coroutines/withLifecycle(com.arkivanov.essenty.lifecycle/Lifecycle, com.arkivanov.essenty.lifecycle/Lifecycle.State = ..., kotlin.coroutines/CoroutineContext = ...): kotlinx.coroutines.flow/Flow<#A> // com.arkivanov.essenty.lifecycle.coroutines/withLifecycle|withLifecycle@kotlinx.coroutines.flow.Flow<0:0>(com.arkivanov.essenty.lifecycle.Lifecycle;com.arkivanov.essenty.lifecycle.Lifecycle.State;kotlin.coroutines.CoroutineContext){0ยง<kotlin.Any?>}[0]
final suspend fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle.coroutines/repeatOnLifecycle(com.arkivanov.essenty.lifecycle/Lifecycle.State = ..., kotlin.coroutines/CoroutineContext = ..., kotlin.coroutines/SuspendFunction1<kotlinx.coroutines/CoroutineScope, kotlin/Unit>) // com.arkivanov.essenty.lifecycle.coroutines/repeatOnLifecycle|repeatOnLifecycle@com.arkivanov.essenty.lifecycle.Lifecycle(com.arkivanov.essenty.lifecycle.Lifecycle.State;kotlin.coroutines.CoroutineContext;kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope,kotlin.Unit>){}[0]
final suspend fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle.coroutines/repeatOnLifecycle(com.arkivanov.essenty.lifecycle/Lifecycle.State = ..., kotlin.coroutines/CoroutineContext = ..., kotlin.coroutines/SuspendFunction1<kotlinx.coroutines/CoroutineScope, kotlin/Unit>) // com.arkivanov.essenty.lifecycle.coroutines/repeatOnLifecycle|repeatOnLifecycle@com.arkivanov.essenty.lifecycle.LifecycleOwner(com.arkivanov.essenty.lifecycle.Lifecycle.State;kotlin.coroutines.CoroutineContext;kotlin.coroutines.SuspendFunction1<kotlinx.coroutines.CoroutineScope,kotlin.Unit>){}[0]
