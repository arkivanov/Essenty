// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Alias: ios => [iosArm64, iosSimulatorArm64, iosX64]
// Alias: tvos => [tvosArm64, tvosSimulatorArm64, tvosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.arkivanov.essenty:lifecycle>
abstract interface com.arkivanov.essenty.lifecycle/Lifecycle { // com.arkivanov.essenty.lifecycle/Lifecycle|null[0]
    abstract fun subscribe(com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks) // com.arkivanov.essenty.lifecycle/Lifecycle.subscribe|subscribe(com.arkivanov.essenty.lifecycle.Lifecycle.Callbacks){}[0]
    abstract fun unsubscribe(com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks) // com.arkivanov.essenty.lifecycle/Lifecycle.unsubscribe|unsubscribe(com.arkivanov.essenty.lifecycle.Lifecycle.Callbacks){}[0]
    abstract interface Callbacks { // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks|null[0]
        open fun onCreate() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onCreate|onCreate(){}[0]
        open fun onDestroy() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onDestroy|onDestroy(){}[0]
        open fun onPause() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onPause|onPause(){}[0]
        open fun onResume() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onResume|onResume(){}[0]
        open fun onStart() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onStart|onStart(){}[0]
        open fun onStop() // com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks.onStop|onStop(){}[0]
    }
    abstract val state // com.arkivanov.essenty.lifecycle/Lifecycle.state|{}state[0]
        abstract fun <get-state>(): com.arkivanov.essenty.lifecycle/Lifecycle.State // com.arkivanov.essenty.lifecycle/Lifecycle.state.<get-state>|<get-state>(){}[0]
    final enum class State : kotlin/Enum<com.arkivanov.essenty.lifecycle/Lifecycle.State> { // com.arkivanov.essenty.lifecycle/Lifecycle.State|null[0]
        enum entry CREATED // com.arkivanov.essenty.lifecycle/Lifecycle.State.CREATED|null[0]
        enum entry DESTROYED // com.arkivanov.essenty.lifecycle/Lifecycle.State.DESTROYED|null[0]
        enum entry INITIALIZED // com.arkivanov.essenty.lifecycle/Lifecycle.State.INITIALIZED|null[0]
        enum entry RESUMED // com.arkivanov.essenty.lifecycle/Lifecycle.State.RESUMED|null[0]
        enum entry STARTED // com.arkivanov.essenty.lifecycle/Lifecycle.State.STARTED|null[0]
        final fun valueOf(kotlin/String): com.arkivanov.essenty.lifecycle/Lifecycle.State // com.arkivanov.essenty.lifecycle/Lifecycle.State.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.arkivanov.essenty.lifecycle/Lifecycle.State> // com.arkivanov.essenty.lifecycle/Lifecycle.State.values|values#static(){}[0]
        final val entries // com.arkivanov.essenty.lifecycle/Lifecycle.State.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.arkivanov.essenty.lifecycle/Lifecycle.State> // com.arkivanov.essenty.lifecycle/Lifecycle.State.entries.<get-entries>|<get-entries>#static(){}[0]
    }
}
abstract interface com.arkivanov.essenty.lifecycle/LifecycleOwner { // com.arkivanov.essenty.lifecycle/LifecycleOwner|null[0]
    abstract val lifecycle // com.arkivanov.essenty.lifecycle/LifecycleOwner.lifecycle|{}lifecycle[0]
        abstract fun <get-lifecycle>(): com.arkivanov.essenty.lifecycle/Lifecycle // com.arkivanov.essenty.lifecycle/LifecycleOwner.lifecycle.<get-lifecycle>|<get-lifecycle>(){}[0]
}
abstract interface com.arkivanov.essenty.lifecycle/LifecycleRegistry : com.arkivanov.essenty.lifecycle/Lifecycle, com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks // com.arkivanov.essenty.lifecycle/LifecycleRegistry|null[0]
final fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/subscribe(kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ...): com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks // com.arkivanov.essenty.lifecycle/subscribe|subscribe@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/create() // com.arkivanov.essenty.lifecycle/create|create@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/destroy() // com.arkivanov.essenty.lifecycle/destroy|destroy@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/pause() // com.arkivanov.essenty.lifecycle/pause|pause@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/resume() // com.arkivanov.essenty.lifecycle/resume|resume@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/start() // com.arkivanov.essenty.lifecycle/start|start@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun (com.arkivanov.essenty.lifecycle/LifecycleRegistry).com.arkivanov.essenty.lifecycle/stop() // com.arkivanov.essenty.lifecycle/stop|stop@com.arkivanov.essenty.lifecycle.LifecycleRegistry(){}[0]
final fun com.arkivanov.essenty.lifecycle/LifecycleRegistry(): com.arkivanov.essenty.lifecycle/LifecycleRegistry // com.arkivanov.essenty.lifecycle/LifecycleRegistry|LifecycleRegistry(){}[0]
final fun com.arkivanov.essenty.lifecycle/LifecycleRegistry(com.arkivanov.essenty.lifecycle/Lifecycle.State): com.arkivanov.essenty.lifecycle/LifecycleRegistry // com.arkivanov.essenty.lifecycle/LifecycleRegistry|LifecycleRegistry(com.arkivanov.essenty.lifecycle.Lifecycle.State){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnCreate(crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnCreate|doOnCreate@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnDestroy(crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnDestroy|doOnDestroy@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnPause(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnPause|doOnPause@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnResume(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnResume|doOnResume@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnStart(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnStart|doOnStart@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/Lifecycle).com.arkivanov.essenty.lifecycle/doOnStop(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnStop|doOnStop@com.arkivanov.essenty.lifecycle.Lifecycle(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnCreate(crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnCreate|doOnCreate@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnDestroy(crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnDestroy|doOnDestroy@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnPause(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnPause|doOnPause@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnResume(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnResume|doOnResume@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnStart(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnStart|doOnStart@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final inline fun (com.arkivanov.essenty.lifecycle/LifecycleOwner).com.arkivanov.essenty.lifecycle/doOnStop(kotlin/Boolean = ..., crossinline kotlin/Function0<kotlin/Unit>) // com.arkivanov.essenty.lifecycle/doOnStop|doOnStop@com.arkivanov.essenty.lifecycle.LifecycleOwner(kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
// Targets: [ios, tvos]
final class com.arkivanov.essenty.lifecycle/ApplicationLifecycle : com.arkivanov.essenty.lifecycle/Lifecycle { // com.arkivanov.essenty.lifecycle/ApplicationLifecycle|null[0]
    constructor <init>() // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.<init>|<init>(){}[0]
    final fun destroy() // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.destroy|destroy(){}[0]
    final fun subscribe(com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks) // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.subscribe|subscribe(com.arkivanov.essenty.lifecycle.Lifecycle.Callbacks){}[0]
    final fun unsubscribe(com.arkivanov.essenty.lifecycle/Lifecycle.Callbacks) // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.unsubscribe|unsubscribe(com.arkivanov.essenty.lifecycle.Lifecycle.Callbacks){}[0]
    final val state // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.state|{}state[0]
        final fun <get-state>(): com.arkivanov.essenty.lifecycle/Lifecycle.State // com.arkivanov.essenty.lifecycle/ApplicationLifecycle.state.<get-state>|<get-state>(){}[0]
}
